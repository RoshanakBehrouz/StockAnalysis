plugins {
    id 'java'
    id 'application'
    id 'checkstyle' //  Checkstyle plugin added
    id 'pmd'     //PMD plugin added
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation 'com.opencsv:opencsv:5.7.1'
    implementation 'org.json:json:20230227'
    implementation 'org.apache.commons:commons-math3:3.6.1'
    implementation 'org.jfree:jfreechart:1.5.3'
    implementation 'org.knowm.xchart:xchart:3.8.1'
    
    // JavaFX Dependencies
    implementation 'org.openjfx:javafx-controls:21'
    implementation 'org.openjfx:javafx-swing:21'
    implementation 'org.openjfx:javafx-web:21'
    implementation 'org.openjfx:javafx-fxml:21'

    // JUnit 5 for Testing
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.mockito:mockito-core:5.7.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.7.0'
}

application {
    mainClass = 'com.sdm.app.App'
}

// Set JavaFX Module Path
def javafxPath = System.getenv('JAVAFX_HOME') ? "${System.getenv('JAVAFX_HOME')}/lib" : null

run {
    if (javafxPath) {
        jvmArgs += [
            "--module-path", javafxPath,
            "--add-modules", "javafx.controls,javafx.fxml,javafx.web,javafx.swing"
        ]
    }
}

tasks.withType(JavaCompile).configureEach {
    if (javafxPath) {
        options.compilerArgs += [
            "--module-path", javafxPath,
            "--add-modules", "javafx.controls,javafx.fxml,javafx.web,javafx.swing"
        ]
    }
}

// Enforce headless mode and exclude GUI-dependent tests in CI
tasks.test {
    useJUnitPlatform {
        if (System.getenv("GITHUB_ACTIONS") == "true") {
            // Only run fast unit tests during CI
            includeTags "unit"
        }
    }

    if (System.getenv("GITHUB_ACTIONS") == "true") {
        systemProperty "java.awt.headless", "true"
        filter {
            excludeTestsMatching "com.sdm.ChartHandlerTest"
            excludeTestsMatching "com.sdm.StockControllerTest"
            excludeTestsMatching "com.sdm.ModelEvaluationTest"
        }
    }

    if (javafxPath) {
        jvmArgs += [
            "--module-path", javafxPath,
            "--add-modules", "javafx.controls,javafx.fxml,javafx.web,javafx.swing"
        ]
    }
}

//  Checkstyle Configuration
checkstyle {
    toolVersion = '10.3.2' 
    configFile = file("$rootDir/config/checkstyle/checkstyle.xml") //  More robust path
    configDirectory = file("$rootDir/config/checkstyle") //  Optional but useful
}

tasks.withType(Checkstyle).configureEach {
    ignoreFailures = false // Set true to allow warnings without failing build
    reports {
        xml.required.set(false)
        html.required.set(true) // HTML report for readability
    }
}

//  PMD configuration
pmd {
    toolVersion = "7.0.0-rc4"  //  Use the latest RC
    ruleSets = []
    ruleSetFiles = files("$rootDir/config/pmd/ruleset.xml")
    consoleOutput = true
    ignoreFailures = false
}



tasks.withType(Pmd).configureEach {
    reports {
        xml.required.set(true)
        html.required.set(true) //  Generates report at build/reports/pmd/
    }
}













